// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using husarbeid.Data;

namespace husarbeid.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210520183119_taskcreator")]
    partial class taskcreator
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("husarbeid.Data.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("husarbeid.Data.FamilyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Payment")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isCompleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FamilyId");

                    b.ToTable("FamilyTasks");
                });

            modelBuilder.Entity("husarbeid.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("husarbeid.Data.FamilyTask", b =>
                {
                    b.HasOne("husarbeid.Data.User", "AssignedTo")
                        .WithMany("UserTasks")
                        .HasForeignKey("AssignedToId");

                    b.HasOne("husarbeid.Data.User", "CreatedBy")
                        .WithMany("UserCreatedTasks")
                        .HasForeignKey("CreatedById");

                    b.HasOne("husarbeid.Data.Family", "Family")
                        .WithMany("Tasks")
                        .HasForeignKey("FamilyId");

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("husarbeid.Data.User", b =>
                {
                    b.HasOne("husarbeid.Data.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("husarbeid.Data.Family", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("husarbeid.Data.User", b =>
                {
                    b.Navigation("UserCreatedTasks");

                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
